import{g as a,W as g,S as y,P as S,V as p,C as M,T as L,a as l,b as x,c as b,M as E,d as h,i as P}from"./vendor.eb0bec41.js";const O=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerpolicy&&(r.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?r.credentials="include":o.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}};O();let u=!1;document.querySelector(".github").addEventListener("click",()=>{u=!0});document.querySelector(".mail").addEventListener("click",()=>{u=!0});window.onbeforeunload=function(){u||(window.scrollTo(0,0),u=!1)};window.addEventListener("scroll",()=>{for(var n=document.querySelectorAll(".hidden"),e=0;e<n.length;e++)n[e].getBoundingClientRect().top-window.innerHeight*.75<0&&(n[e].classList.remove("hidden"),a.from(n[e],{opacity:0,y:50,duration:.5}))});window.onresize=function(){location.reload()};document.querySelector(".projectLink").addEventListener("click",()=>{document.querySelector("#projects").scrollIntoView({behavior:"smooth",block:"center",inline:"center"})});document.querySelector(".navContactLink").addEventListener("click",()=>{document.querySelector("#contact").scrollIntoView({behavior:"smooth",block:"start"})});let I=a.timeline(),c=60,d=document.querySelector(".img1").clientHeight,m=10,f=0;window.innerWidth<=320&&(c=50);window.innerWidth>600&&(d=d*1.5,m=30);window.innerWidth>900&&(c=75);window.innerWidth>1200&&(m=100,c=100,f=7);window.onload=()=>{I.to(".loaderName",{transform:"translate(0)",duration:1,ease:"power2.out",onComplete:()=>{document.querySelector(".cover").classList.add("disableCover"),document.querySelector(".loader").style.backgroundColor="transparent",document.querySelector(".loader").style.zIndex="-1"}}).to(".loaderName",{fontSize:c,width:window.innerWidth-m*2,duration:.75,ease:"Power2.inOut",autoRound:!1,force3D:!0}).to(".cover",{top:document.querySelector(".header").offsetHeight+15,x:f,duration:.75,ease:"Power2.inOut",autoRound:!1,force3D:!0,onComplete:()=>{document.querySelector(".cover").classList.add("invisible"),document.querySelector(".name").classList.remove("invisible")}},"-=.75").from(".jobTitle, .introTxt",{opacity:0,y:100,duration:.5,ease:"power2.out"},"-=.4").from(".circle, .navLink, .arrow",{opacity:0,duration:.5},"-=.5").from(".img1, .img2",{y:d,duration:1,ease:"power2.out"},"-=.75")};let v="light";document.querySelector(".circle").addEventListener("click",()=>{v=="light"?(document.documentElement.setAttribute("data-theme","dark"),v="dark"):(document.documentElement.setAttribute("data-theme","light"),v="light")});Number.prototype.map=function(n,e,t,i){return(this-n)*(i-t)/(e-n)+t};class q{constructor(e=document.body,t=null){this.container=e,this.itemsWrapper=t,!(!this.container||!this.itemsWrapper)&&(this.setup(),this.initEffectShell().then(()=>{console.log("load finished"),this.isLoaded=!0,this.isMouseOver&&this.onMouseOver(this.tempItemIndex),this.tempItemIndex=null}),this.createEventsListeners())}setup(){window.addEventListener("resize",this.onWindowResize.bind(this),!1),this.renderer=new g({antialias:!0,alpha:!0}),this.renderer.setSize(this.viewport.width,this.viewport.height),this.renderer.setPixelRatio(window.devicePixelRatio),this.container.appendChild(this.renderer.domElement),this.scene=new y,this.camera=new S(40,this.viewport.aspectRatio,.1,100),this.camera.position.set(0,0,3),this.mouse=new p,this.timeSpeed=2,this.time=0,this.clock=new M,this.renderer.setAnimationLoop(this.render.bind(this))}render(){this.time+=this.clock.getDelta()*this.timeSpeed,this.renderer.render(this.scene,this.camera)}initEffectShell(){let e=[];this.items=this.itemsElements;const t=new L;return this.items.forEach((i,o)=>{e.push(this.loadTexture(t,i.img?i.img.src:null,o))}),new Promise((i,o)=>{Promise.all(e).then(r=>{r.forEach((s,w)=>{this.items[w].texture=s.texture}),i()})})}createEventsListeners(){this.items.forEach((e,t)=>{e.element.addEventListener("mouseover",this._onMouseOver.bind(this,t),!1)}),this.container.addEventListener("mousemove",this._onMouseMove.bind(this),!1),this.itemsWrapper.addEventListener("mouseleave",this._onMouseLeave.bind(this),!1)}_onMouseLeave(e){this.isMouseOver=!1,this.onMouseLeave(e)}_onMouseMove(e){this.mouse.x=e.clientX/this.viewport.width*2-1,this.mouse.y=-(e.clientY/this.viewport.height)*2+1,this.onMouseMove(e)}_onMouseOver(e,t){this.tempItemIndex=e,this.onMouseOver(e,t)}onWindowResize(){this.camera.aspect=this.viewport.aspectRatio,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.viewport.width,this.viewport.height)}onUpdate(){}onMouseEnter(e){}onMouseLeave(e){}onMouseMove(e){}onMouseOver(e,t){}get viewport(){let e=this.container.clientWidth,t=this.container.clientHeight,i=e/t;return{width:e,height:t,aspectRatio:i}}get viewSize(){let e=this.camera.position.z,t=this.camera.fov*Math.PI/180,i=2*Math.tan(t/2)*e;return{width:i*this.viewport.aspectRatio,height:i,vFov:t}}get itemsElements(){return[...this.itemsWrapper.querySelectorAll(".link")].map((t,i)=>({element:t,img:t.querySelector("img")||null,index:i}))}loadTexture(e,t,i){return new Promise((o,r)=>{if(!t){o({texture:null,index:i});return}e.load(t,s=>{o({texture:s,index:i})},void 0,s=>{console.error("An error happened.",s),r(s)})})}}class k extends q{constructor(e=document.body,t=null,i={}){super(e,t);!this.container||!this.itemsWrapper||(i.strength=i.strength||.5,this.options=i,this.init())}init(){this.position=new l(0,0,0),this.scale=new l(1,1,1),this.geometry=new x(1,1,32,32),this.uniforms={uTexture:{value:null},uOffset:{value:new p(0,0)},uAlpha:{value:0}},this.material=new b({uniforms:this.uniforms,vertexShader:`
        uniform vec2 uOffset;

        varying vec2 vUv;

        vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {
          float M_PI = 3.1415926535897932384626433832795;
          position.x = position.x + (sin(uv.y * M_PI) * offset.x);
          position.y = position.y + (sin(uv.x * M_PI) * offset.y);
          return position;
        }

        void main() {
          vUv =  uv + (uOffset * 2.);
          vec3 newPosition = position;
          newPosition = deformationCurve(position,uv,uOffset);
          gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );
        }
      `,fragmentShader:`
        uniform sampler2D uTexture;
        uniform float uAlpha;

        varying vec2 vUv;

        vec2 scaleUV(vec2 uv,float scale) {
          float center = 0.5;
          return ((uv - center) * scale) + center;
        }

        void main() {
          vec3 color = texture2D(uTexture,scaleUV(vUv,0.8)).rgb;
          gl_FragColor = vec4(color,uAlpha);
        }
      `,transparent:!0}),this.plane=new E(this.geometry,this.material),this.scene.add(this.plane)}onMouseEnter(){(!this.currentItem||!this.isMouseOver)&&(this.isMouseOver=!0,a.to(this.uniforms.uAlpha,.5,{value:1,ease:h.easeOut}))}onMouseLeave(e){a.to(this.uniforms.uAlpha,.5,{value:0,ease:h.easeOut})}onMouseMove(e){let t=this.mouse.x.map(-1,1,-this.viewSize.width/2,this.viewSize.width/2),i=this.mouse.y.map(-1,3.5,-this.viewSize.height/2,this.viewSize.height/2);this.position=new l(t,i,0),a.to(this.plane.position,1,{x:t,y:i,ease:h.easeOut,onUpdate:this.onPositionUpdate.bind(this)})}onPositionUpdate(){let e=this.plane.position.clone().sub(this.position).multiplyScalar(-this.options.strength);this.uniforms.uOffset.value=e}onMouseOver(e,t){!this.isLoaded||(this.onMouseEnter(),!(this.currentItem&&this.currentItem.index===e)&&this.onTargetChange(e))}onTargetChange(e){if(this.currentItem=this.items[e],!this.currentItem.texture)return;let t=this.currentItem.img.naturalWidth/this.currentItem.img.naturalHeight;this.scale=new l(t/3,1/3,1/3),this.uniforms.uTexture.value=this.currentItem.texture,this.plane.scale.copy(this.scale)}}const W=document.body,C=document.querySelector(".projects"),z=()=>new Promise((n,e)=>{P(document.querySelectorAll("img"),n)});z().then(()=>{document.body.classList.remove("loading"),new k(W,C)});
